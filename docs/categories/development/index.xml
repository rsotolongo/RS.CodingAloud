<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Coding Aloud</title>
    <link>/categories/development/</link>
    <description>Recent content in Development on Coding Aloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 11 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="/categories/development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating and deploying releases using Octopus</title>
      <link>/post/using-octopus/</link>
      <pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/using-octopus/</guid>
      <description>Source code of support available at GitHub
Since while ago I wanted to share my experiences automatizing the product releases with Octopus from Visual Studio. Again, let’s do it through an example.
As it could not be otherwise, figure 1 shows the first package you should add to your project in order to create Octopus packages ready to be deployed: &amp;ldquo;OctoPack&amp;rdquo;. The latest package version available at the time of this tutorial was the &amp;ldquo;3.</description>
    </item>
    
    <item>
      <title>Coding style using StyleCop</title>
      <link>/post/stylecop-coding-style/</link>
      <pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/stylecop-coding-style/</guid>
      <description>A colleague ask me to share my experience coding with ReSharper and once he heard that I’m not use ReSharper he was even more curious about how I write source codes. Who knows me knows I love NuGet packages and be updated constantly, that’s why I found a very useful package that I install in all my projects as soon I start it.
StyleCop.MSBuild
StyleCop used to be a standalone application with integration with Visual Studio but that changed a while ago.</description>
    </item>
    
  </channel>
</rss>
