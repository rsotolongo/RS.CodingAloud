<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Desarrollo on Programando en voz alta</title>
    <link>/es/categories/desarrollo/</link>
    <description>Recent content in Desarrollo on Programando en voz alta</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <lastBuildDate>Mon, 18 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="/es/categories/desarrollo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creando paquetes NuGet</title>
      <link>/es/post/creando-paquetes-nuget/</link>
      <pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/es/post/creando-paquetes-nuget/</guid>
      <description>Últimamente he estado involucrado en la creación de varios paquetes NuGet útiles para algunos portales que se están siendo desarrollando. Quiero compartir mis conocimientos en este tema.
Si estuviéramos desarrollando bibliotecas para .NET Core o .NET Standard, la vida sería fácil, como muestra La figura 1 a La figura 8.
Figura 1: &amp;ldquo;Creación de una nueva biblioteca de .NET Core&amp;rdquo;.
Figura 2: “Código predeterminado”.
Figura 3: &amp;ldquo;Resultados de la primera compilación&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Creando y desplegando aplicaciones usando Octopus</title>
      <link>/es/post/usando-octopus/</link>
      <pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/es/post/usando-octopus/</guid>
      <description>Código fuente de apoyo disponible en GitHub
Desde hace un tiempo quería compartir mis experiencias automatizando los despliegues de productos con Octopus desde Visual Studio. Nuevamente, hagámoslo con un ejemplo.
Como no podía ser de otra manera, La figura 1 muestra el primer paquete que debes agregar a tu proyecto para poder crear paquetes Octopus listos para ser desplegados: &amp;ldquo;OctoPack&amp;rdquo;. La última versión del paquete disponible en el momento de este tutorial era la &amp;ldquo;3.</description>
    </item>
    
    <item>
      <title>Estilizando códigos usando StyleCop</title>
      <link>/es/post/estilo-de-c%C3%B3digo-usando-stylecop/</link>
      <pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/es/post/estilo-de-c%C3%B3digo-usando-stylecop/</guid>
      <description>Un colega me pidió que compartiera mi experiencia programando con ReSharper y, una vez que se enteró de que no uso ReSharper, sintió aún más curiosidad por saber cómo escribo los códigos fuentes. Quien me conoce sabe que me encantan los paquetes NuGet y estar actualizado constantemente, por eso encontré un paquete muy útil que instalo en todos mis proyectos apenas los inicio.
StyleCop.MSBuild
StyleCop solía ser una aplicación independiente con integración con Visual Studio, pero eso cambió hace un tiempo.</description>
    </item>
    
  </channel>
</rss>
